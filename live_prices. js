// ─── live_prices.js ────────────────────────────────────────────────

const assets = [
  { symbol: "btc", name: "bitcoin", quantity: 0.005 },
  { symbol: "bnb", name: "binancecoin", quantity: 2 },
  { symbol: "usdt", name: "tether", quantity: 0.02799625 },
  { symbol: "bonk", name: "bonk", quantity: 12000 }
];

let previousPrices = {};

function formatUsd(value) {
  return "$" + (value < 1 ? value.toFixed(8) : value.toLocaleString(undefined, {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }));
}

async function fetchLivePrices() {
  try {
    const ids = assets.map(asset => asset.name).join(",");
    const res = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);
    const data = await res.json();
    return assets.map(asset => ({
      symbol: asset.symbol,
      price: data[asset.name]?.usd || 0,
      quantity: asset.quantity
    }));
  } catch (err) {
    console.error("Failed to fetch prices", err);
    return assets.map(asset => ({
      symbol: asset.symbol,
      price: previousPrices[asset.symbol] || 0,
      quantity: asset.quantity
    }));
  }
}

function updateAssetPrices(prices) {
  prices.forEach(({ symbol, price, quantity }) => {
    const usdValue = quantity * price;
    const usdDiv = document.querySelector(`.asset-usd[data-symbol="${symbol}"]`);
    if (usdDiv) {
      usdDiv.textContent = formatUsd(usdValue);
    }
    previousPrices[symbol] = price;
  });
}

async function refreshPrices() {
  const prices = await fetchLivePrices();
  updateAssetPrices(prices);
}

window.addEventListener("DOMContentLoaded", () => {
  refreshPrices();
  setInterval(refreshPrices, 15000); // refresh every 15s
});
